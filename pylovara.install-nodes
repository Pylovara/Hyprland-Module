#!/bin/bash
clear
set -euo pipefail
IFS=$'\n\t'
sleep 2
echo "#---------------------TimeForReadme----------------------#"
sleep 2
echo "#      https://github.com/Pylovara/Hyprland-Module/      #"
sleep 0.3
echo "#      ┏┓  ┓┏  ┓   ┏┓  ┓┏  ┏┓  ┳┓  ┏┓                    #"
sleep 0.1
echo "#      ┃┃  ┗┫  ┃   ┃┃  ┃┃  ┣┫  ┣┫  ┣┫                    #"
sleep 0.1
echo "#      ┣┛  ┗┛  ┗┛  ┗┛  ┗┛  ┛┗  ┛┗  ┛┗                    #"
sleep 2
echo "#          ┏┓•┓  ┳┳┓                                     #"
sleep 0.1
echo "#          ┣ ┓┃┏┓┃┃┃┏┓┏┓┏┓┏┓┏┓┏┓   p & pylo              #"
sleep 0.1
echo "#          ┻ ┗┗┗ ┛ ┗┗┻┛┗┗┻┗┫┗ ┛     SHELL                #"
sleep 0.1
echo "#                          ┛                             #"
sleep 2
echo "#        ┳┓┏┓┏┳┓┏┓  ┏┓┏┓┏┓┏━   ┏  ╻                      #"
sleep 0.1
echo "#        ┣┫┣  ┃ ┣┫  ┏┛┃┫┏┛┗┓  ━┫━━┃━━━━━━━━━━━━━━━━━━    #"
sleep 0.1
echo "#        ┻┛┗┛ ┻ ┛┗  ┗━┗┛┗━┗┛   ┗  ╹Pylovara-FileManager  #"
sleep 0.1
echo "#--------------------------------------------------------#"
sleep 6
echo "#      Used in the Shell for commands options infos      #"
sleep 2
echo "#              pylo         |           p                #"
sleep 0.2
echo "#---------------------------|----------------------------#"
sleep 0.1
echo "#           pylooptions     |        poptions            #"
sleep 0.1
echo "#--------------------------------------------------------#"
sleep 6
echo "#   >>>>>>>>>   Used prompt in the Shell   <<<<<<<<<<<<  #"
sleep 2
echo "#   SHELL |                Beispiel                      #"
sleep 0.2
echo "#---------|----------------------------------------------#"
sleep 0.2
echo "#    p    | pdownloads pmusik phypr ptwitch puserscripts #"
sleep 0.2
echo "#    p    | phyprland  pdokumente ptorbrowser ppictures  #"
sleep 0.2
echo "#--------------------------------------------------------#"
sleep 2
echo "#    pylovara | searcht all*.wiki-notes ON               #"
sleep 2
echo "#    pylovara YouSearch(.wiki-notes)                     #"
sleep 2
echo "#---------|----------------------------------------------#"
sleep 6
echo "#   SHELL | pylo > Directory > Data > SHELL > (&& SHELL) #"
sleep 2
echo "#---------|----------------------------------------------#"
sleep 2
echo "#   pylo  | pylo Downloads/- Readme.md cat               #"
sleep 0.1
echo "#   pylo  | pylo Musik/- data.mp3 vlc                    #"
sleep 0.1
echo "#   pylo  | pylo Video/- MyVideo.mp4 mpv                 #"
sleep 0.1
echo "#   pylo  | pylo Downloads/- Scripts.sh chmod +x         #"
sleep 0.1
echo "#   pylo  | pylo Downloads/- WatEver.zip cp ~/home       #"
sleep 0.1
echo "#--------------------------------------------------------#"
sleep 10
echo "#         Pylovara is from User for User Maket           #"
sleep 3
echo "#    Used Easy - Speed Navigations - Better Control      #"
sleep 3
echo "#     Do yourself a favor and use a proper shell...      #"
sleep 0.5
echo "#       My recommendation: Kitty or Alacritty.           #"
echo "#        sudo pacman -S kitty other Alacritty            #"
echo "#--------------Sudo Install Prozess Ready ---------------#"
echo "#--------------Joint to better System ;-) ---------------#"
sleep 8
#!/bin/bash
# pylovara.install-nodes
# Brutale Wahrheit: Entweder du führst das Skript als root aus oder du lässt es bleiben.

set -e

# Farben für Ausgaben
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # Reset

echo -e "${YELLOW}[*] Starte Installation des Pylovara-FileManager-Systems...${NC}"

# Sicherheitscheck: Root?
if [[ "$EUID" -ne 0 ]]; then
  echo -e "${RED}[!] Dieses Skript muss als root ausgeführt werden.${NC}"
  exit 1
fi

# Zielpfad festlegen
INSTALL_DIR="/Pylovara-FileManager-System"

# Prüfen, ob das Skript aus dem GitHub-Klon läuft
if [[ ! -f "pylovara.install-nodes" ]]; then
  echo -e "${RED}[!] Dieses Skript muss im geklonten Repo-Verzeichnis ausgeführt werden.${NC}"
  exit 1
fi

# Zielverzeichnis bereinigen, falls bereits vorhanden
if [[ -d "$INSTALL_DIR" ]]; then
  echo -e "${YELLOW}[~] Vorherige Installation erkannt, lösche $INSTALL_DIR ...${NC}"
  rm -rf "$INSTALL_DIR"
fi

# Kopieren der Projektstruktur
echo -e "${GREEN}[+] Kopiere Daten nach $INSTALL_DIR ...${NC}"
cp -r . "$INSTALL_DIR"

# Optional: Git-Verzeichnis entfernen
rm -rf "$INSTALL_DIR/.git" 2>/dev/null

# Rechte setzen – alle ausführbaren Shell-Module + Konfigs
echo -e "${GREEN}[+] Setze Ausführungsrechte ...${NC}"
find "$INSTALL_DIR" -type f \( \
  -name "*.p-nodes" -o -name "*.pylo-nodes" -o -name "*.wiki-nodes" \
  -o -name "*.nano-nodes" -o -name "*.pv-conf" -o -name "*.conf" \
  \) -exec chmod +x {} \;

# Optionale Log-Verzeichnisse vorbereiten (sicherstellen, dass sie leer und vorhanden sind)
mkdir -p "$INSTALL_DIR/P-Error" "$INSTALL_DIR/Pylo-Error"
chmod 755 "$INSTALL_DIR/P-Error" "$INSTALL_DIR/Pylo-Error"

# Source-Datei eintragen, falls nicht vorhanden
PROFILE_PATH="/etc/profile.d/pylovara.sh"
echo -e "${GREEN}[+] Registriere SystemControl in $PROFILE_PATH ...${NC}"
cat <<EOF > "$PROFILE_PATH"
# Pylovara systemweite Umgebungsinitialisierung
[ -f "$INSTALL_DIR/Pylovara-DirectoryManager/SystemControl.pv-conf" ] && \\
  source "$INSTALL_DIR/Pylovara-DirectoryManager/SystemControl.pv-conf"
EOF
chmod +x "$PROFILE_PATH"

echo -e "${GREEN}[✓] Pylovara wurde erfolgreich installiert nach:${NC} $INSTALL_DIR"
echo -e "${YELLOW}[!] Starte dein Terminal neu oder source manuell:${NC}"
echo -e "     source $INSTALL_DIR/Pylovara-DirectoryManager/SystemControl.pv-conf"

