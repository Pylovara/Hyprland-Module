#!/bin/bash
# Nano-Module/show-help.nano-nodes
# Pylovara dynamic CLI-Hilfe für Nano-Modul aus cli-hilfsausgabe.pv.conf
# Angepasst für Arch Linux ... first step

CONFIG="/Pylovara-FileManager-System/Pylovara-DirectoryManager/cli-hilfsausgabe.pv.conf"
LOGDIR="/Pylovara-FileManager-System/P-Logs"
LOGFILE="$LOGDIR/show-help-nano.log"

# Sicherstellen, dass Log-Verzeichnis existiert
mkdir -p "$LOGDIR"

# Funktion zum Parsen der INI-Datei
parse_ini() {
    local section="$1"
    local key="$2"
    if [[ -f "$CONFIG" ]]; then
        awk -F' = ' "/\[$section\]/,/\[.*\]|^$/{if (\$1 == \"$key\") print \$2}" "$CONFIG" 2>>"$LOGFILE"
    else
        echo "[!] Konfigurationsdatei $CONFIG nicht gefunden" >&2
        echo "[$(date '+%F %T')] [!] Konfigurationsdatei $CONFIG nicht gefunden" >>"$LOGFILE"
        exit 1
    fi
}

# Hauptlogik
case "$1" in
    --help)
        echo "Nano-Modul Hilfe:"
        echo "[$(date '+%F %T')] [INFO] Aufruf --help" >>"$LOGFILE"
        parse_ini nano --run
        parse_ini nano --list
        parse_ini main --tutorial
        ;;
    --run)
        echo "Führe einzelne Nano-Aktion aus:"
        echo "[$(date '+%F %T')] [INFO] Aufruf --run" >>"$LOGFILE"
        parse_ini nano --run
        ;;
    --list)
        echo "Liste verfügbare Nano-Module:"
        echo "[$(date '+%F %T')] [INFO] Aufruf --list" >>"$LOGFILE"
        parse_ini nano --list
        ;;
    --tutorial)
        echo "Nano-Modul Tutorial:"
        echo "[$(date '+%F %T')] [INFO] Aufruf --tutorial" >>"$LOGFILE"
        echo "Beispiel 1: Führe Log-Verwaltungsaktion aus"
        echo "  nano --run log_size_guard"
        echo "Beispiel 2: Liste alle verfügbaren Nano-Module"
        echo "  nano --list"
        echo "Hinweis: *.nano-nodes sind feine Einstellungen, die auf Hauptnodes (p, pylo, wiki) aufbauen."
        ;;
    *)
        echo "Unbekannte Option. Nutze --help für eine Übersicht."
        echo "[$(date '+%F %T')] [ERROR] Unbekannte Option: $1" >>"$LOGFILE"
        exit 1
        ;;
esac
