# Control PV CONF - PYLOVARA CONFIG MAIN 
# Alle Conf Sourcen - Komplette Kontrolle 
# Quelle ~> /Pylovara/SystemControl/

################################################################################

# BASIC CONTROL
MASTER_DIR="/Pylovara/SystemControl/"
CONTROL_DIR="/Pylovara/"
MODULE_DIR="/Pylovara/SystemDirectory/FileManager/Basis-Module/"

################################################################################

# Master-Input - control.pv-conf 

source "$MASTER_DIR/nodes.conf"
source "$MASTER_DIR/nano-nodes.conf"
source "$MASTER_DIR/micro-nodes.conf"
#source "$MASTER_DIR/needles.conf"
source "$MASTER_DIR/core-dna.conf"
#source "$MASTER_DIR/download.conf"
#source "$MASTER_DIR/cache.conf"
#source "$MASTER_DIR/wiki.conf"
source "$MASTER_DIR/logic.conf"
source "$MASTER_DIR/datatypes.conf"


echo "[SystemControl] Alle .conf geladen aus: $MASTER_DIR"

################################################################################

# SYSTEMALIASE Funktionen

helpme() {
    source "$MODULE_DIR/Nodes/main.wiki-nodes" "$@"
}
p() {
    source "$MODULE_DIR/Nodes/main.p-nodes" "$@"
}
pylo() {
    source "$MODULE_DIR/Nodes/main.pylo-nodes" "$@"
}
dna() {
    source "$MODULE_DIR/DNA/main.core-dna" "$@"
}

echo "[SystemControl] Alle Basic Module Einsatzbereit"

################################################################################

# SOURCE SEKTION Extras

# source

# source

# source

# echo "[SystemControl] Extras Sourced Geladen"

################################################################################

# DEBUG / STATUSAUSGABE (optional)
# echo "[SystemControl] "
# echo "[SystemControl] "
# echo "[SystemControl] "

################################################################################

# Funktion zum Parsen von datatypes.conf
get_datatype_info() {
    local ref_id="$1"
    local conf_file="/Pylovara/SystemControl/datatypes.conf"
    local section_found=0
    local key value

    if [[ ! -f "$conf_file" ]]; then
        echo "❌ Fehler: Konfigurationsdatei '$conf_file' nicht gefunden" >&2
        return 1
    fi

    while IFS=' = ' read -r key value; do
        # Sektionen erkennen
        if [[ "$key" =~ ^\[(.*)\]$ ]]; then
            current_section="${BASH_REMATCH[1]}"
            continue
        fi
        # Werte in der passenden Sektion auswerten
        if [[ "$current_section" && "$current_section" == "$ref_id" ]]; then
            section_found=1
            case "$key" in
                version|format|ref_id|description|created|author)
                    echo "$key: $value"
                    ;;
            esac
        fi
    done < "$conf_file"

    if [[ $section_found -eq 0 ]]; then
        echo "❌ Fehler: Datentyp '$ref_id' nicht in '$conf_file' gefunden" >&2
        return 2
    fi
}

# Master-Input - control.pv.conf 
for conf in nodes.conf nano-nodes.conf micro-nodes.conf core-dna.conf logic.conf datatypes.conf; do
    if [[ -f "$MASTER_DIR/$conf" ]]; then
        source "$MASTER_DIR/$conf" || {
            echo "❌ Fehler beim Laden von '$conf'" >&2
            continue
        }
    else
        echo "❌ Konfigurationsdatei '$conf' nicht gefunden" >&2
    fi
done

echo "[SystemControl] Alle .conf geladen aus: $MASTER_DIR"

################################################################################
